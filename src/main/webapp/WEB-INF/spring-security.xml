<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- enable use-expressions -->
    
   <http auto-config="true" use-expressions="true">
		
        <intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		
        <!-- access denied page -->
        <access-denied-handler error-page="/403" />
		
       <form-login 
		    login-page="/login" 
                        authentication-success-handler-ref="myAuthenticationSuccessHandler"
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		
       
       
	<logout logout-success-url="/login?logout" logout-url="/logout" />
		<!-- enable csrf protection -->
		<csrf/>
	</http>
        
        
       <beans:bean id="myAuthenticationSuccessHandler" class="com.sharmila.hibernatespringsecurity.authentication.MyAuthenticationSuccessHandler"/>

	
    <!-- Select users and user_roles from database -->
    <authentication-manager>
	  <authentication-provider user-service-ref="userService" >
<!--		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username,password, enabled from user where username=?"
		  authorities-by-username-query=


"select u.username ,u.password ,r.role from user u,tbl_role r,role_user ru where u.user_id=ru.user_id and r.id=ru.role_id and u.username=?" />
	  -->
          </authentication-provider>
	</authentication-manager>

</beans:beans>